* sort -un -k2,2 train.tsv
    -n intepret the fileds as numbers
    -k2,2 Consider only 2nd column
    -u => print only unique lines

* cat train_uniq_sentenceID.tsv  | awk -F'\t' '{print $3, "$", $4}' | sed 's/^/\{"sentence":"/g' | sed 's/\$/", "category": "/g' | sed 's/$/"},/g' | sed '$s/.$/]/g' | sed '1s/^/[/g' > train_uniq_sentenceID.json
Convert csv to json file.

* sed -i 's/\\//g' train_uniq_sentenceID.json

* awk -F'"' -v OFS='' '{ for (i=2; i<=NF; i+=2) gsub(",", "", $i) } 1' Train.csv | sed 's/^/\{"sentence": "/g' | sed 's/,/", "category":"/g' | sed 's/$/"\},/g' | tail -n+2 | sed '1s/^/\[/g' | sed '$s/,$/\]/g' > Train.json
    Remove the commas in b/w quotes and convert csv to json.

* sed 's/\"*//g' Train.json  | sed 's/sentence/"sentence"/g' | sed s'/category/"category"/g' |  sed 's/sentence": /sentence": "/g' | sed 's/, "category":/", "category":/g' > Train.json.tmp && mv Train.json.tmp Train.json 
    Some pre-processing stuff.

* cat dataset.json | sed -E 's/^(.*)(-1|\+1)/{"sentence":"\1","category":"\2"}/g'